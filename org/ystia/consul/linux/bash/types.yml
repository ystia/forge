tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.consul.linux.bash
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia

description: Consul agent and server

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT
  - org.ystia.consul.pub:2.3.0-SNAPSHOT

node_types:
  org.ystia.consul.linux.bash.nodes.Consul:
    derived_from: org.ystia.nodes.SoftwareComponent
    description: Consul Server or Consul Agent component for linux
    requirements:
      - server_endpoint:
          capability: org.ystia.consul.pub.capabilities.ConsulServer
          relationship: org.ystia.consul.linux.bash.relationships.ConnectsConsulAgentToServer
          occurrences: [0,1]
    tags:
      icon: /images/consul-icon.png
    attributes:
      dnsmask_previous: { get_operation_output: [SELF, Standard, create, YSTIA_DNSMASK_PREVIOUS] }
    properties:
      install_dnsmasq:
        type: boolean
        description: >
          By default, a dnsmask is installed as a DNS proxy.
          It is sometimes needed to remove it if another DNS is already installed (bind for example)
        default: true
      installation_directory:
        type: string
        description: installation path of consul
        default: ~/consul
      component_version:
        type: version
        description: the Consul version installed.
        default: 0.5.2
        constraints:
          - equal: 0.5.2
    capabilities:
      agent:
        type: org.ystia.consul.pub.capabilities.ConsulAgent
      server:
        type: org.ystia.consul.pub.capabilities.ConsulServer
    interfaces:
      Standard:
        create:
          inputs:
            INSTALL_DNSMASQ: { get_property: [SELF, install_dnsmasq] }
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            IP_ADDRESS: { get_attribute: [SELF, ip_address] }
          implementation: scripts/consul_install.sh
        configure:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            IP_ADDRESS: { get_attribute: [SELF, ip_address] }
          implementation: scripts/consul_configure.sh
        start:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
          implementation: scripts/consul_start.sh
        stop:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
          implementation: scripts/consul_stop.sh
        delete:
          inputs:
            INSTALL_DNSMASQ: { get_property: [SELF, install_dnsmasq] }
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            DNSMASQ_PREVIOUS: { get_attribute: [SELF, dnsmask_previous] }
          implementation: scripts/consul_delete.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts

relationship_types:
  org.ystia.consul.linux.bash.relationships.ConnectsConsulAgentToServer:
    derived_from: org.ystia.consul.pub.relationships.ConnectsConsulAgentToServer
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            SERVER_IP: { get_attribute: [TARGET, ip_address] }
            INSTALL_DIR: { get_property: [SOURCE, installation_directory] }
          implementation: scripts/consul_agent_to_server.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts
