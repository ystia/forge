tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.ystia.vault.prod.ansible-linux
  template_version: 2.2.0-SNAPSHOT
  template_author: Ystia

description: Vault server implementation using Ansible on Linux

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.1.0
  - org.ystia.vault.pub:2.2.0-SNAPSHOT
  - org.ystia.yorc.experimental.consul.pub:2.3.0-SNAPSHOT

node_types:
  org.ystia.vault.prod.ansible-linux.nodes.VaultServer:
    derived_from: org.ystia.vault.pub.nodes.VaultServer
    description: >
      Vault server.
    requirements:
      - consul_agent:
          capability: org.alien4cloud.consul.pub.capabilities.ConsulAgent
          relationship: org.ystia.vault.prod.relationships.ConnectToConsulAgent
          occurrences: [ 1, 1 ]
    properties:
      component_version:
        type: version
        required: true
        default: 1.2.3
      install_dir:
        description: Path on the filesystem to install Vault binary
        type: string
        required: true
        default: /usr/local/bin
      config_dir:
        description: Path on the filesystem to store Vault configuration
        type: string
        required: true
        default: /etc/vault
      tls_disabled:
        description: If true, Vault will not use tls for http. Else, you should specify ca_key, ca_pem and ca_passphrase properties.
        type: boolean
        required: true
        default: false
      ca_pem:
        description: The provided CA certificate content
        type: string
        required: false
      ca_key:
        description: The provided CA key content
        type: string
        required: false
      ca_passphrase:
        description: The CA key passphrase
        type: string
        required: false
      tls_verify:
        description: If true, Vault will use the CA certificate (ca_pem) to verify the authenticity of clients.
        type: boolean
        required: true
        default: false
      log_level:
        description: Log verbosity level.
        type: string
        required: true
        default: info
        constraints:
          - valid_values: [trace, debug, info, warn, err]
      log_format:
        type: string
        required: true
        default: standard
        constraints:
          - valid_values: [standard, json]
    #attributes:
      #vault_addr: { get_operation_output: [ SELF, Standard, start, VAULT_ADDR ] }
      #unsealed_keys_file: { get_operation_output: [ SELF, Standard, start, UNSEALED_KEYS_FILE ] }
      #vault_token_encrypted: { get_operation_output: [ SELF, Standard, start, VAULT_TOKEN_ENCRYPTED ] }
    interfaces:
      Standard:
        inputs:
          INSTALL_DIR: { get_property: [SELF, install_dir] }
          CONFIG_DIR: { get_property: [SELF, config_dir] }
          VAULT_TLS_DISABLED: { get_property: [SELF, tls_disabled] }
        create:
          inputs:
            VERSION: { get_property: [SELF, component_version] }
            LOG_LEVEL: { get_property: [SELF, log_level] }
            LOG_FORMAT: { get_property: [SELF, log_format] }
          implementation: playbooks/create.yaml
        start: 
          inputs:
            VAULT_IP: { get_attribute: [SELF, private_address] }
            VAULT_PORT: { get_property: [SELF, vault_server, port] }
          implementation: playbooks/start.yaml
        stop: playbooks/stop.yaml
        delete: playbooks/delete.yaml
  
  org.ystia.vault.prod.ansible-linux.nodes.VaultAutoUnseal.Default:
    derived_from: org.ystia.vault.pub.nodes.VaultAutoUnseal.Default
    attributes:
      root_token: { get_operation_output: [ SELF, Standard, start, ROOT_TOKEN ] }
      unseal_keys: { get_operation_output: [ SELF, Standard, start, UNSEAL_KEYS ] }
    interfaces:
      Standard:
        start: 
          inputs:
            VAULT_TLS_DISABLED: { get_property: [HOST, tls_disabled] }
            VAULT_IP: { get_attribute: [HOST, private_address] }
            VAULT_PORT: { get_property: [HOST, vault_server, port] }
            CONFIG_DIR: { get_property: [HOST, config_dir] }
            KEY_SHARE: { get_property: [SELF, key_share] }
            KEY_THRESHOLD: { get_property: [SELF, key_threshold] }
          implementation: playbooks/default_unseal.yaml

relationship_types:
  org.ystia.vault.prod.relationships.ConnectToConsulAgent:
    derived_from: org.ystia.yorc.experimental.consul.pub.relationships.JoinConsulAgent
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            VAULT_IP: { get_attribute: [SOURCE, private_address] }
            VAULT_PORT: { get_property: [SOURCE, vault_server, port] }
            VAULT_TLS_DISABLED: { get_property: [SOURCE, tls_disabled] }
            VAULT_TLS_VERIFY: { get_property: [SOURCE, tls_verify] }
            VAULT_CA_KEY: { get_property: [SOURCE, ca_key] }
            VAULT_CA_PEM: { get_property: [SOURCE, ca_pem] }
            VAULT_CA_PASSPHRASE: { get_property: [SOURCE, ca_passphrase] }
            AGENT_IP: { get_attribute: [TARGET, private_address] }
            AGENT_API_PORT: { get_property: [TARGET, consul_agent, port] }
            AGENT_TLS_ENABLED: { get_property: [TARGET, tls_enabled] }
            CONFIG_DIR: { get_property: [SOURCE, config_dir] }
          implementation:  playbooks/configure.yaml 
