- name: Unseal Vault by API calls
  hosts: all
  strategy: free
  become: true
  tasks:
    - name: Set API url HTTPS
      set_fact:
        vault_api_url: "https://{{ VAULT_IP }}:{{ VAULT_PORT }}"
      when: not (VAULT_TLS_DISABLED | bool)
    - name: Set API url HTTP
      set_fact:
        vault_api_url: "http://{{ VAULT_IP }}:{{ VAULT_PORT }}"
      when: VAULT_TLS_DISABLED | bool

    # Unseal only from the first instance
    - name: Set instance first name
      set_fact:
        first_instance_name: "{{ NODE + '_0' }}"

    - name: Init Vault
      uri:
        url: "{{ vault_api_url }}/v1/sys/init"
        method: PUT
        body_format: json
        body: >
          {
            "secret_shares": {{ KEY_SHARE | int }},
            "secret_threshold": {{ KEY_THRESHOLD | int }}
          }
        client_cert: "{{ CONFIG_DIR }}/vault.pem"
        client_key: "{{ CONFIG_DIR }}/vault.key"
        validate_certs: no
      register: resp
      when: INSTANCE == first_instance_name

    - name: Register attributes
      set_fact:
        ROOT_TOKEN: "{{ resp.json.root_token }}"
        UNSEAL_KEYS: "{{ resp.json['keys'] | join(' ; ') }}"
      when: INSTANCE == first_instance_name
    
    - name: Register attributes when not unseal instance
      set_fact:
        ROOT_TOKEN: "{{ 'Refer to ' + first_instance_name + 'root_token'}}"
        UNSEAL_KEYS: "{{ 'Refer to ' + first_instance_name + 'unseal_keys'}}"
      when: INSTANCE != first_instance_name

    - name: Unseal Vault
      uri:
        url: "{{ vault_api_url }}/v1/sys/unseal"
        method: PUT
        body_format: json
        body:
          key: "{{ item }}"
        client_cert: "{{ CONFIG_DIR }}/vault.pem"
        client_key: "{{ CONFIG_DIR }}/vault.key"
        validate_certs: no
      when:
        - INSTANCE == first_instance_name
        - index < (KEY_THRESHOLD | int)
      loop: "{{ resp.json['keys'] }}"
      loop_control:
        index_var: index
