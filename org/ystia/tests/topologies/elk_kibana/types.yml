#
# Add this first comment line to avoid this test topology will be imported in the A4C catalog
#

tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.tests.topologies.elk_kibana
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia


imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT
  - org.ystia.java.pub:2.3.0-SNAPSHOT
  - org.ystia.consul.pub:2.3.0-SNAPSHOT
  - org.ystia.elasticsearch.pub:2.3.0-SNAPSHOT
  - org.ystia.java.linux.bash:2.3.0-SNAPSHOT
  - org.ystia.consul.linux.bash:2.3.0-SNAPSHOT
  - org.ystia.elasticsearch.linux.bash:2.3.0-SNAPSHOT
  - org.ystia.kibana.pub:2.3.0-SNAPSHOT
  - org.ystia.kibana.linux.bash:2.3.0-SNAPSHOT


topology_template:
  description: A basic topology template with Kibana connects to Elasticsearch

  inputs:
    es_repository:
      type: string
      required: false
      default: "https://artifacts.elastic.co/downloads/elasticsearch"
      constraints:
        - pattern: ^(http|https|ftp)://.+/.*$
    es_curator_repository_url:
      type: string
      required: false
      default: "http://packages.elastic.co/curator/4/centos/7"
      constraints:
        - pattern: ^(http|https|ftp)://.+/.*$
    es_curator_repository_key_url:
      type: string
      required: false
      default: "http://packages.elastic.co/GPG-KEY-elasticsearch"
      constraints:
        - pattern: ^(http|https|ftp)://.+/.*$
    kbn_repository:
      type: string
      required: false
      default: "https://artifacts.elastic.co/downloads/kibana"
      constraints:
        - pattern: ^(http|https|ftp)://.+/.*$

  node_templates:

    # Network

    Network:
      type: tosca.nodes.Network
      properties:
        ip_version: 4

    # VM for Consul Server

    Compute_CS:
      type: tosca.nodes.Compute
    Consul_Server:
      type: org.ystia.consul.linux.bash.nodes.Consul
      requirements:
        - host:
            node: Compute_CS

    # VM for Elasticsearch

    Compute_ES:
      type: tosca.nodes.Compute
      properties:
        mem_size: 12GB
      requirements:
        - network:
            node: Network
            relationship: tosca.relationships.Network
    Consul_ES:
      type: org.ystia.consul.linux.bash.nodes.Consul
      requirements:
        - host:
            node: Compute_ES
        - server_endpoint:
            node: Consul_Server
    Java_ES:
      type: org.ystia.java.linux.bash.nodes.Java
      requirements:
        - host:
            node: Compute_ES
    Elasticsearch:
      type: org.ystia.elasticsearch.linux.bash.nodes.Elasticsearch
      properties:
        repository: { get_input: es_repository }
        curator_repository_url: { get_input: es_curator_repository_url }
        curator_repository_key_url: { get_input: es_curator_repository_key_url }
      requirements:
        - host:
            node: Java_ES
        - consul:
            node: Consul_ES

    # VM for Kibana

    Compute_KBN:
      type: tosca.nodes.Compute
      requirements:
        - network:
            node: Network
            relationship: tosca.relationships.Network
    Consul_KBN:
      type: org.ystia.consul.linux.bash.nodes.Consul
      requirements:
        - host:
            node: Compute_KBN
        - server_endpoint:
            node: Consul_Server
    Java_KBN:
      type: org.ystia.java.linux.bash.nodes.Java
      requirements:
        - host:
            node: Compute_KBN
    Kibana:
      type: org.ystia.kibana.linux.bash.nodes.Kibana
      properties:
        repository: { get_input: kbn_repository }
      requirements:
        - host:
            node: Java_KBN
        - consul:
            node: Consul_KBN
        - search_endpoint:
            node: Elasticsearch
    KibanaDashboard:
      type: org.ystia.kibana.linux.bash.nodes.KibanaDashboard
      requirements:
        - host:
            node: Kibana

  # Output property for Kibana URL

  outputs:
    kibana_url:
      description: The URL to access the Kibana dashboard
      value: { get_attribute: [ Kibana, url ] }
