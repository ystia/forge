tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.mysql.linux.bash
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia

description: MySQL Component

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT
  - org.ystia.mysql.pub:2.3.0-SNAPSHOT

node_types:
  org.ystia.mysql.linux.bash.nodes.MySQLServer:
    derived_from: org.ystia.nodes.DBMS
    description: MySQL Server component for linux
    tags:
      icon: /images/mysql_server.jpg
    properties:
      root_password:
        type: string
        description: DBMS root password
        default: "mysql"
        required: false
      port:
        type: integer
        description: DBMS port
        default: 3306
        constraints:
          - equal: 3306
      component_version:
        type: version
        description: The optional MySQL componentâ€™s version.
        default: 5.6
        constraints:
          - equal: 5.6
      repository:
        type: string
        required: true
        description: >
          This property give the opportunity to specify an alternative download repository for this component artifact.
          It is your responsibility to provide an accessible download url and to store required artifacts on it.
        default: http://repo.mysql.com/yum/mysql-5.6-community/el/7/x86_64
    capabilities:
      host:
        type: org.ystia.mysql.pub.capabilities.Container.MySQLServer
    interfaces:
      Standard:
        create:
          inputs:
            MYSQL_REPO: { get_property: [SELF, repository]}
          implementation: scripts/mysql_create.sh
        configure:
          inputs:
            DBMS_ROOT_PASSWORD: { get_property: [SELF, root_password]}
          implementation: scripts/mysql_configure.sh
        start:
          implementation: scripts/mysql_start.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts
  org.ystia.mysql.linux.bash.nodes.MySQLDatabase:
    derived_from: org.ystia.nodes.Database
    description: Database component for MySQL, on linux
    tags:
      icon: /images/mysql_db.jpg
    properties:
      name:
        type: string
        description: Database name
        required: true
        default: "DB1"
      user:
        type: string
        description: DataBase user
        required: true
        default: "db1"
      password:
        type: string
        description: DataBase user password
        required: true
        default: "secret"
      port:
        type: integer
        description: DBMS port
        default: 3306
        constraints:
          - equal: 3306
    capabilities:
      mysql_db_endpoint:
        type: org.ystia.mysql.pub.capabilities.Endpoint.MySQLDatabase
        occurrences: [0, unbounded]
    requirements:
      - host:
          capability: org.ystia.mysql.pub.capabilities.Container.MySQLServer
          relationship: org.ystia.mysql.linux.bash.relationships.HostedOn.MySQLServer
          occurrences: [1,1]
      - blockstorage:
          capability: tosca.capabilities.Node
          relationship: org.ystia.mysql.linux.bash.relationships.DependsOn.MySqlVolume
          occurrences: [0,1]
    interfaces:
     Standard:
       create:
         inputs:
          DB_NAME: { get_property: [SELF, name]}
          DB_USER: { get_property: [SELF, user]}
          DB_PASSWORD: { get_property: [SELF, password]}
          DBMS_ROOT_PASSWORD : { get_property: [HOST, root_password]}
         implementation: scripts/mysql_db_create.sh
       configure:
         inputs:
          DB_NAME: { get_property: [SELF, name]}
          DB_USER: { get_property: [SELF, user]}
          DB_PASSWORD: { get_property: [SELF, password]}
          DBMS_ROOT_PASSWORD : { get_property: [HOST, root_password]}
         implementation: scripts/mysql_db_configure.sh
       start:
         implementation: scripts/mysql_db_start.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts

relationship_types:
  org.ystia.mysql.linux.bash.relationships.HostedOn.MySQLServer:
    derived_from: org.ystia.relationships.HostedOn
    description: >
      This type represents a hosting relationship between MySQLServer and MySQLDataBase nodes components
    valid_target_types: [ org.ystia.mysql.pub.capabilities.Container.MySQLServer ]

  org.ystia.mysql.linux.bash.relationships.DependsOn.MySqlVolume:
    derived_from: org.ystia.relationships.DependsOn
    valid_target_types: [ tosca.capabilities.Node ]
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            TARGET_BLOCKSTORAGE_DEVICE: { get_attribute: [TARGET, device] }
          implementation: scripts/mysql_pre_configure_volume.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts

