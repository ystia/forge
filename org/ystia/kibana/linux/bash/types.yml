tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.kibana.linux.bash
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia

description:

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT
  - org.ystia.consul.pub:2.3.0-SNAPSHOT
  - org.ystia.java.pub:2.3.0-SNAPSHOT
  - org.ystia.kibana.pub:2.3.0-SNAPSHOT
  - org.ystia.elasticsearch.pub:2.3.0-SNAPSHOT

node_types:
  org.ystia.kibana.linux.bash.nodes.Kibana:
    derived_from: org.ystia.consul.pub.nodes.ConsulUser
    description: Kibana component from Elastic Stack for linux
    tags:
      icon: /images/kibana-icon.png
    attributes:
      url: { concat: ["http://", get_attribute: [HOST, public_ip_address], ":5601/app/kibana#/dashboards" ] }
      java_home: { get_operation_output: [ SELF, Configure, pre_configure_source, JAVA_HOME ] }
    properties:
      component_version:
        type: version
        description: Version of the installed Kibana component
        default: 6.2.2
        constraints:
          - valid_values: [5.6.8,6.2.2]
      repository:
        type: string
        description: >
          This property give the opportunity to specify an alternative download repository for this component artifacts.
          It is your responsibility to provide an accessible download url and to store required artifacts on it.
          You should specify only the base repository url. Artifacts names will be appended to it, so this property could be shared among
          several components using the inputs feature.
        required: true
        default: "https://artifacts.elastic.co/downloads/kibana"
        constraints:
          - pattern: ^(http|https|ftp)://.+/.*$
      es_heap_size:
        type: string
        default: "2G"
        description: >
          This property allows to set the heap memory size that is allocated to Elasticsearch client node java process,
          It allocates the same value to both initial and maximum values (ie -Xms and -Xmx java options).
        constraints:
          - pattern: "[1-9][0-9]*[kKmMgG]"
    capabilities:
      host:
        type: org.ystia.kibana.pub.capabilities.DashboardHosting
        occurrences: [0,unbounded]
    requirements:
      - host:
          capability: org.ystia.java.pub.capabilities.JavaHosting
          relationship: org.ystia.java.pub.relationships.HostedOnJavaRuntime
          occurrences: [1, 1]
      - search_endpoint:
          capability: org.ystia.elasticsearch.pub.capabilities.SearchEndpoint
          relationship: org.ystia.kibana.linux.bash.relationships.ConnectsKibanaToElasticsearch
          occurrences: [1,1]
    interfaces:
      Standard:
        create:
          inputs:
            KBN_VERSION: { get_property: [SELF, component_version] }
            REPOSITORY: { get_property: [SELF, repository] }
          implementation: scripts/kibana_install.sh
        configure:
          inputs:
            KBN_VERSION: { get_property: [SELF, component_version] }
            JAVA_HOME: { get_attribute: [SELF, java_home] }
          implementation: scripts/kibana_configure.sh
        start:
          inputs:
            JAVA_HOME: { get_attribute: [SELF, java_home] }
          implementation: scripts/kibana_start.sh
        stop:
          implementation: scripts/kibana_stop.sh
        delete:
          inputs:
            KBN_VERSION: { get_property: [SELF, component_version] }
          implementation: scripts/kibana_delete.sh
      custom:
        load_dashboard:
          inputs:
            url:
              type: string
              description: URL of the dashboard to upload and import in Kibana
              required: true
          implementation: scripts/load_dashboard.sh
    artifacts:
      - scripts:
          file: scripts
          type: tosca.artifacts.File
      - plugins:
          file: plugins
          type: tosca.artifacts.File

  org.ystia.kibana.linux.bash.nodes.KibanaDashboard:
    derived_from: org.ystia.nodes.Root
    description: Default Dashboard component hosted on Kibana
    tags:
      icon: /images/chart-icon.png
    requirements:
      - host:
          capability: org.ystia.kibana.pub.capabilities.DashboardHosting
          relationship: org.ystia.kibana.linux.bash.relationships.DashboardHostedOnKibana
          occurrences: [1,1]
    interfaces:
      Standard:
        create: scripts/load_dashboard.sh
      custom:
        update_dashboard:
          inputs:
            url:
              type: string
              description: URL of the dashboard to upload to update the current one in Kibana
              required: true
          implementation: scripts/load_dashboard.sh
    artifacts:
      - scripts:
          file: scripts
          type: tosca.artifacts.File
      - dashboard_file:
          file: dashboards/kdb_default.json
          type: org.ystia.kibana.pub.artifacts.Dashboard

  org.ystia.kibana.linux.bash.nodes.BeatsDashboards:
    derived_from: org.ystia.nodes.Root
    description: Dashboard component for Beats components hosted on Kibana
    tags:
      icon: /images/chart-icon.png
    requirements:
      - host:
          capability: org.ystia.kibana.pub.capabilities.DashboardHosting
          relationship: org.ystia.kibana.linux.bash.relationships.BeatsDashboardsHostedOnKibana
          occurrences: [1,1]
    interfaces:
      Standard:
        create: scripts/load_beats_dashboards.sh
    artifacts:
      - scripts:
          file: scripts
          type: tosca.artifacts.File
      - dashboards_zip:
          file: dashboards/beats_dashboards.zip
          type: tosca.artifacts.File

relationship_types:
  org.ystia.kibana.linux.bash.relationships.ConnectsKibanaToElasticsearch:
    derived_from: org.ystia.relationships.ConnectsTo
    description: Connects Kibana to Elasticsearch
    valid_target_types: [ org.ystia.elasticsearch.pub.capabilities.SearchEndpoint ]
    interfaces:
      Configure:
        pre_configure_source:
          implementation: relationships/elasticsearch/kibana_to_elasticsearch_pre_config_source.sh
          inputs:
            kibanaIp: { get_attribute: [ SOURCE, ip_address] }
            elasticsearchIp: { get_attribute: [ TARGET, ip_address] }
            REPOSITORY: { get_property: [SOURCE, repository] }
            ELASTICSEARCH_REPOSITORY: { get_property: [TARGET, repository] }
            ELASTICSEARCH_VERSION: { get_property: [TARGET, component_version] }
        post_configure_source:
          implementation: relationships/elasticsearch/kibana_to_elasticsearch_post_config_source.sh
          inputs:
            cluster_name: { get_property: [ TARGET, search_resource, cluster_name ] }
            kibanaIp: { get_attribute: [ SOURCE, ip_address] }
            elasticsearchIp: { get_attribute: [ TARGET, ip_address] }
            ELASTICSEARCH_HEAP_SIZE: { get_property: [SOURCE, es_heap_size] }
            JAVA_HOME: { get_attribute: [SOURCE, java_home] }
    artifacts:
      - rselasticsearch:
          file: relationships/elasticsearch
          type: tosca.artifacts.File

  org.ystia.kibana.linux.bash.relationships.DashboardHostedOnKibana:
    derived_from: org.ystia.relationships.HostedOn
    description: Relationship that allows to host a Dashboard on Kibana.
    valid_target_types: [ org.ystia.kibana.pub.capabilities.DashboardHosting ]

  org.ystia.kibana.linux.bash.relationships.BeatsDashboardsHostedOnKibana:
    derived_from: org.ystia.relationships.HostedOn
    description: Relationship that allows to host Dashboards for Beats components on Kibana.
    valid_target_types: [ org.ystia.kibana.pub.capabilities.DashboardHosting ]
