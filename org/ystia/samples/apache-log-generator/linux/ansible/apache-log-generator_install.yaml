- name: Install Apache Log Genereator requirements
  hosts: all
  strategy: free
  become: true
  become_method: sudo
  vars:
      INSTALL_DIR: "/opt/apache-log-generator"
  tasks:
    - name: Create install directory
      file:
        path: "{{ INSTALL_DIR }}"
        state: directory

    - name: Install binaries
      copy:
        src: "{{ item }}"
        dest: "{{ INSTALL_DIR }}"
      with_items:
        - requirements.txt
        - apache-fake-log-gen.py

  - name: Get python version
    python_requirements_info:
    register: pri
    failed_when: pri == None or pri.python_version == None or pri.python_version == ''
  - name: Get python major version
    set_fact:
      python_major_version: "{{pri.python_version | replace('\n', '') | regex_replace('^(\\d+).*', '\\1') }}"
  - name: Install pip version compatible with python 2
    easy_install:
      name: pip<21.0
    when: python_major_version == "2"
  - name: Install pip
    easy_install:
      name: pip
      state: latest
    when: python_major_version != "2"

    - name: Install Apache log Generator python requirements
      pip:
        requirements: "{{ INSTALL_DIR }}/requirements.txt"

    - name: Change install dir owner
      file:
        path: "{{ INSTALL_DIR }}"
        owner: "{{ ansible_env.SUDO_UID }}"
        group: "{{ ansible_env.SUDO_GID }}"
        recurse: yes
