tosca_definitions_version: alien_dsl_2_0_0
#
# Copyright 2018 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


metadata:
  template_name: org.ystia.yorc.linux.ansible
  template_version: 2.1.0-SNAPSHOT
  template_author: yorc

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.0.0
  - org.ystia.yorc.pub:2.1.0-SNAPSHOT
  - org.ystia.yorc.experimental.consul.pub:2.1.0-SNAPSHOT


node_types:
  org.ystia.yorc.infrastructure.OpenStackConfig:
    derived_from: org.ystia.yorc.pub.infrastructure.OpenStackConfig
    interfaces:
      Standard:
        inputs:
          CONFIG_DIR: { get_property: [HOST, config_dir] }
          DATA_DIR: { get_property: [SELF, data_dir] }
          AUTH_URL: { get_property: [SELF, auth_url] }
          TENANT_NAME: { get_property: [SELF, tenant_name] }
          USER_NAME: { get_property: [SELF, user_name] }
          PASSWORD: { get_property: [SELF, password] }
          PRIVATE_NETWORK_NAME: { get_property: [SELF, private_network_name] }
          DEFAULT_SECURITY_GROUPS: { get_property: [SELF, default_security_groups] }
          KEY_PAIR: { get_property: [SELF, key_pair] }
        configure:
          implementation: playbooks/configure_openstack.yml

  org.ystia.yorc.infrastructure.AWSConfig:
    derived_from: org.ystia.yorc.pub.infrastructure.AWSConfig
    interfaces:
      Standard:
        inputs:
          CONFIG_DIR: { get_property: [HOST, config_dir] }
          ACCESS_KEY: { get_property: [SELF, access_key] }
          SECRET_KEY: { get_property: [SELF, secret_key] }
          REGION: { get_property: [SELF, region] }
        configure:
          implementation: playbooks/configure_aws.yml

  org.ystia.yorc.infrastructure.KubernetesConfig:
    derived_from: org.ystia.yorc.pub.infrastructure.KubernetesConfig
    interfaces:
      Standard:
        inputs:
          CONFIG_DIR: { get_property: [HOST, config_dir] }
          MASTER_URL: { get_property: [SELF, master_url] }
          CA: { get_property: [SELF, ca] }
          CERT: { get_property: [SELF, cert] }
          KEY: { get_property: [SELF, key] }
          INSECURE: { get_property: [SELF, insecure] }
        configure:
          implementation: playbooks/configure_kubernetes.yml

  org.ystia.yorc.linux.ansible.nodes.YorcServer:
    derived_from: org.ystia.yorc.pub.nodes.YorcServer
    description: Yorc server instance
    metadata:
      icon: "yorcicon.png"
    interfaces:
      Standard:
        inputs:
          CONFIG_DIR: { get_property: [SELF, config_dir] }
          INSTALL_DIR: { get_property: [SELF, install_dir] }
          DATA_DIR: { get_property: [SELF, data_dir] }
        create:
          inputs:
            DOWNLOAD_URL: { get_property: [SELF, download_url] }
          implementation: playbooks/create.yml
        configure:
          inputs:
            REST_API_PORT: { get_property: [SELF, rest, port] }
          implementation: playbooks/configure.yml
        start: playbooks/start.yml
        stop: playbooks/stop.yml
        delete: playbooks/delete.yml
    requirements:
      - consul:
          capability: org.alien4cloud.consul.pub.capabilities.ConsulAgent
          # Override parent requirement relationship
          relationship: org.ystia.yorc.linux.ansible.relationships.JoinConsulAgent
          occurrences: [ 1, 1 ]
      - work_directory:
          capability: tosca.capabilities.Node
          relationship: org.ystia.yorc.linux.ansible.relationships.DependsOnFilessystem
          occurrences: [0,1]

relationship_types:
  org.ystia.yorc.linux.ansible.relationships.JoinConsulAgent:
    derived_from: org.ystia.yorc.pub.relationships.JoinConsulAgent
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            CONSUL_SCHEME: "http"
            CONSUL_PORT: { get_property: [TARGET, consul_agent, port] }
          implementation: playbooks/join_consul.yml
  org.ystia.yorc.linux.ansible.relationships.DependsOnFilessystem:
    derived_from: tosca.relationships.DependsOn
    description: >
      Connects Yorc to a FileSystem (BlockStorage, NFS...)
    valid_target_types: [ alien.nodes.LinuxFileSystem ]
    interfaces:
      Configure:
        post_configure_source:
          inputs:
            CONFIG_DIR: { get_property: [SOURCE, config_dir] }
            DIRECTORY: { get_property: [TARGET, location] }
          implementation: playbooks/configure_filesystem.yml
