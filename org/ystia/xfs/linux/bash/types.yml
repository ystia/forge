tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.xfs.linux.bash
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia

description: Extended Storage Ystia Component

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT

node_types:
  org.ystia.xfs.linux.bash.nodes.XFS:
    derived_from: org.ystia.nodes.SoftwareComponent
    description: XFS FileSystem component which can be used to mount and format a volume
    tags:
      icon: /images/volume.png
    properties:
      location:
        type: string
        description: >
          The relative location (e.g., path on the file system), which provides the root location to address an attached node.
          e.g., a mount point / path such as ‘/usr/data’
          Note: The user must provide it and it cannot be “root”.
        constraints:
          - min_length: 1
    attributes:
      partition_name: { get_operation_output: [ SELF, Configure, pre_configure_source, PARTITION_NAME ] } # this is a hack to specifies that the attribute is filled from a relationship.
    requirements:
      - host:
          capability: tosca.capabilities.Container
          relationship: tosca.relationships.HostedOn
          occurrences: [1,1]
          node_filter: # Ensure that the host node has a os capability with linux operating system.
            capabilities:
              - tosca.capabilities.OperatingSystem: # os -> tosca.capabilities.OperatingSystem
                  properties:
                    - type: { equal: linux }
      - partition:
          capability: tosca.capabilities.Node
          relationship: org.ystia.xfs.linux.bash.relationships.LinuxPartition
          occurrences: [1,1]
    interfaces:
      Standard:
        start:
          inputs:
            FS_MOUNT_PATH: { get_property: [SELF, location] }
            PARTITION_NAME: { get_attribute: [SELF, partition_name]}
          implementation: scripts/mount.sh
        stop:
          inputs:
            FS_MOUNT_PATH: { get_property: [SELF, location] }
          implementation: scripts/unmount.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts

relationship_types:
  org.ystia.xfs.linux.bash.relationships.LinuxPartition:
    derived_from: tosca.relationships.DependsOn
    description: Connects a FileSystem to a Volume
    properties:
      partition_type:
        description: >
          The partition type.
          Default value is 83: a Linux Native Partition
        type: integer
        default: 83
    attributes:
      partition_name: { get_operation_output: [ SELF, Configure, pre_configure_source, PARTITION_NAME ] }
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            PARTITION_TYPE: { get_property: [SELF, partition_type] }
            DEVICE: { get_attribute: [TARGET, device] }
          implementation: scripts/fdisk.sh
        post_configure_source:
          inputs:
            PARTITION_NAME: { get_attribute: [SOURCE, partition_name ] }
          implementation: scripts/mkfs.sh
    artifacts:
      - scripts:
          file: scripts
          type: tosca.artifacts.File
