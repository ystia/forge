tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.topologies.cloudera-basic
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT
  - org.ystia.cloudera.pub:2.3.0-SNAPSHOT
  - org.ystia.cloudera.linux.bash:2.3.0-SNAPSHOT
  - org.ystia.consul.pub:2.3.0-SNAPSHOT
  - org.ystia.consul.linux.bash:2.3.0-SNAPSHOT

topology_template:
  description: A topology template for Cloudera.

  inputs:
    cdh_repository:
      type: string
      required: false
      default: "https://archive.cloudera.com/cdh5/redhat/7/x86_64/cdh/5/"
      constraints:
        - pattern: "^(http|https|ftp)://.+/.*$"
      description: |
        This property give the opportunity to specify an alternative download repository for Cloudera Distribution Hadoop (CDH).
    cdh_kafka_repository:
      type: string
      required: false
      default: "http://archive.cloudera.com/kafka/redhat/7/x86_64/kafka/3.0.0/"
      constraints:
        - pattern: "^(http|https|ftp)://.+/.*$"
      description: |
        This property give the opportunity to specify an alternative download repository for Kafka Cloudera Distribution Hadoop (CDH).
    cloudera_manager_repository:
      type: string
      required: false
      default: "https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.14.1/"
      constraints:
        - pattern: "^(http|https|ftp)://.+/.*$"
      description: |
        This property give the opportunity to specify an alternative download repository for Cloudera Manager Server and Cloudera Manager Agent.
    ntp_server:
      type: string
      required: false
      default: "fr.pool.ntp.org"
      description: NTP server

  node_templates:
    Network:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    Compute_A:
      type: tosca.nodes.Compute
      requirements:
        - network:
            node: Network
            relationship: tosca.relationships.Network
      capabilities:
        scalable:
          properties:
            max_instances: 10
            min_instances: 1
            default_instances: 3
    ClouderaAgent_A:
      type: org.ystia.cloudera.linux.bash.nodes.ClouderAgent
      properties:
        cdh_repository: { get_input: cdh_repository }
        cdh_kafka_repository: { get_input: cdh_kafka_repository }
        cloudera_manager_repository: { get_input: cloudera_manager_repository }
        ntp_server: { get_input: ntp_server }
      requirements:
        - consul:
            node: Consul_A
        - server_endpoint:
            node: ClouderaServer
        - host:
            node: Compute_A
    Consul_A:
      type: org.ystia.consul.linux.bash.nodes.Consul
      requirements:
        - server_endpoint:
            node: Consul_Server
        - host:
            node: Compute_A
    Compute_S:
      type: tosca.nodes.Compute
      requirements:
        - network:
            node: Network
            relationship: tosca.relationships.Network
      capabilities:
        scalable:
          properties:
            max_instances: 1
            min_instances: 1
            default_instances: 1
    ClouderaServer:
      type: org.ystia.cloudera.linux.bash.nodes.ClouderaServer
      properties:
        cloudera_manager_repository: { get_input: cloudera_manager_repository }
        ntp_server: { get_input: ntp_server }
      requirements:
        - consul:
            node: Consul_S
        - host:
            node: Compute_S
    ClouderaAgent_S:
      type: org.ystia.cloudera.linux.bash.nodes.ClouderAgent
      properties:
        cdh_repository: { get_input: cdh_repository }
        cdh_kafka_repository: { get_input: cdh_kafka_repository }
        cloudera_manager_repository: { get_input: cloudera_manager_repository }
        ntp_server: { get_input: ntp_server }
      requirements:
        - consul:
            node: Consul_S
        - server_endpoint:
            node: ClouderaServer
        - host:
            node: Compute_S
    Consul_S:
      type: org.ystia.consul.linux.bash.nodes.Consul
      requirements:
        - server_endpoint:
            node: Consul_Server
        - host:
            node: Compute_S
    Compute_Consul:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            max_instances: 1
            min_instances: 1
            default_instances: 1
    Consul_Server:
      type: org.ystia.consul.linux.bash.nodes.Consul
      requirements:
        - host:
            node: Compute_Consul
  outputs:
    url:
      description: The URL to access the Cloudera Manager Server Web UI.
      value: { get_attribute: [ ClouderaServer, url ] }
