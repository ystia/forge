tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.docker.images
  template_version: 3.0.0-SNAPSHOT
  template_author: Ystia



imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.1.0

node_types:
  org.ystia.docker.images.Loader:
    derived_from: tosca.nodes.SoftwareComponent
    description: Loads a docker image from a tar archive
    properties:
      path:
        type: string
        description: Path to the tar archive (can be compressed with gzip, bzip2, or xz))
        required: true
      name:
        type: string
        description: >
          Image name. Name format will be one of: name, repository/name, registry_server:port/name.
          When pushing an image the name can optionally include the tag by appending ':tag_name'.
        required: false
      tag:
        type: string
        description: >
          Tag added to the image when pushing.
          If name property format is name:tag, then tag value from name will take precedence.
        required: false
      repository:
        type: string
        description: >
          Full path to a repository. Expects format repository:tag.
          If no tag is provided, will use the value of the tag parameter or latest.
        required: false
      push:
        type: boolean
        description: Push the image to the registry. Specify the registry as part of the name or repository parameter.
        default: false
        required: false
    attributes:
      repo_tags: { get_operation_output: [SELF, Standard, start, REPO_TAGS] }
    interfaces:
      Standard:
        inputs:
          PATH: { get_property: [SELF, path] }
          NAME: { get_property: [SELF, name] }
          TAG: { get_property: [SELF, tag] }
          REPOSITORY: { get_property: [SELF, repository] }
          PUSH: { get_property: [SELF, push] }
        create:
          implementation: playbooks/create.yaml
        start:
          implementation: playbooks/load_archive.yaml
        delete:
          inputs:
            repo_tags: { get_attribute: [SELF, repo_tags] }
          implementation: playbooks/remove_image.yaml
