#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#


- name: Install python requirements
  hosts: all
  become: true
  environment:
    # Adding /usr/local/bin needed by virtualenv on CentOS 8
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  tasks:
  - name: Get python version
    python_requirements_info:
    register: pri
    failed_when: pri == None or pri.python_version == None or pri.python_version == ''
  - name: Get python major version
    set_fact:
      python_major_version: "{{pri.python_version | replace('\n', '') | regex_replace('^(\\d+).*', '\\1') }}"
  - name: Set python version for pip
    set_fact:
      python_pip_pkg: "python3-pip"
      pip_cmd: "pip3"
    when: python_major_version != "2"
  - name: Set python 2 version for pip
    set_fact:
      python_pip_pkg: "python-pip"
      pip_cmd: "pip"
    when: python_major_version == "2"
  - name: RedHat - install prerequisites
    yum:
      name:
        - "{{ python_pip_pkg }}"
      state: present
      update_cache: yes
    when: ansible_os_family == 'RedHat'
  - name: Debian - install prerequisites
    apt:
      name:
        - "{{ python_pip_pkg }}"
      state: present
      update_cache: yes
    register: apt_res
    retries: 5
    delay: 15
    until: apt_res is success
    when: ansible_os_family == 'Debian'
  - name: Install latest Pip version
    pip:
      name: "pip"
      state: latest
      executable: "{{pip_cmd}}"
    when: python_major_version != "2"
  - name: Install latest Pip version compatible with python 2
    pip:
      name: "pip<21.0"
      state: latest
      executable: "{{pip_cmd}}"
    when: python_major_version == "2"

  - name: Install 'virtualenv' package
    pip:
      name: virtualenv
      state: latest
      executable: "{{pip_cmd}}"
  
  - name: Check docker python dependencies
    shell: >
      pip list 2>/dev/null | grep "^docker-py" || true
    register: dockerpy

  - name: Install 'docker' python package
    pip:
      name:
        - docker
        - six
      virtualenv: /usr/local/docker-py-env

- name: Create Docker Container
  hosts: all
  become: true
  vars:
    ansible_python_interpreter: "/usr/local/docker-py-env/bin/python"
    DOCKER_ENV: {}
    DOCKER_EXP_PORTS: []
    DOCKER_PUB_PORT: []
    DOCKER_VOLUMES: []
    DOCKER_STATE: "present"
  tasks:
  - import_tasks: docker_container_tasks.yaml

  - name: Store container id
    set_fact:
      CONTAINER_ID: "{{docker_res.ansible_facts.docker_container['Id']}}"
