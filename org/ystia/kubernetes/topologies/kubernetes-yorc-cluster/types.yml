tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: Kubernetes-Yorc-Cluster
  template_version: 2.3.0-SNAPSHOT
  template_author: admin

description: "Setup a Kubernetes Cluster plus some specific credentials to make it manageable by Yorc"

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.kubernetes.pub:2.3.0-SNAPSHOT
  - org.ystia.kubernetes.linux.ansible:2.3.0-SNAPSHOT
  - yorc-types:1.1.0

topology_template:
  node_templates:
    Network:
      metadata:
        a4c_edit_x: 68
        a4c_edit_y: "-48"
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    KubernetesMaster:
      type: org.ystia.kubernetes.linux.ansible.nodes.KubernetesMaster
      requirements:
        - hostedOnComputeHost:
            type_requirement: host
            node: ComputeKubeMaster
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    KubernetesDashBoard:
      type: org.ystia.kubernetes.linux.ansible.nodes.KubernetesDashBoard
      properties:
        service_type: NodePort
        expose_admin_token: true
      requirements:
        - hostedOnKubernetesMasterApp_host:
            type_requirement: app_host
            node: KubernetesMaster
            capability: org.ystia.kubernetes.pub.capabilities.AppHosting
            relationship: tosca.relationships.HostedOn
    ComputeKubeMaster:
      metadata:
        a4c_edit_x: "-11"
        a4c_edit_y: "-3"
      type: tosca.nodes.Compute
      requirements:
        - networkNetworkConnection:
            type_requirement: network
            node: Network
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    ComputeKubeWorker:
      metadata:
        a4c_edit_x: "-298"
        a4c_edit_y: 3
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 10
            default_instances: 1
    KubernetesWorker:
      type: org.ystia.kubernetes.linux.ansible.nodes.KubernetesWorker
      requirements:
        - hostedOnComputeKubeWorkerHost:
            type_requirement: host
            node: ComputeKubeWorker
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - joinClusterKubernetesMasterApi_server:
            type_requirement: api_server
            node: KubernetesMaster
            capability: org.ystia.kubernetes.pub.capabilities.KubernetesAPIServer
            relationship: org.ystia.kubernetes.linux.ansible.relationships.JoinCluster
    YorcClusterRole:
      type: org.ystia.kubernetes.linux.ansible.nodes.KubernetesApp
      properties:
        specs:
          - "https://gist.githubusercontent.com/loicalbertin/1c48a4dc5204e1826e1e059ec8b7017e/raw/9b178bcfadb150fbbf38086711f5af14fb7f9424/KubeYorcClusterRole.yaml"
      requirements:
        - hostedOnKubernetesMasterApp_host:
            type_requirement: app_host
            node: KubernetesMaster
            capability: org.ystia.kubernetes.pub.capabilities.AppHosting
            relationship: tosca.relationships.HostedOn
  outputs:
    KubernetesMaster_url:
      value: { get_attribute: [ KubernetesMaster, api_url ] }
    KubernetesDashBoard_url:
      value: { get_attribute: [ KubernetesDashBoard, url ] }
    KubernetesDashBoard_admin_token:
      value: { get_attribute: [ KubernetesDashBoard, admin_token ] }
