tosca_definitions_version: alien_dsl_2_0_0

#
# Ystia Forge
# Copyright (C) 2018 Bull S. A. S. - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
#

metadata:
  template_name: org.ystia.haproxy.linux.bash
  template_version: 2.3.0-SNAPSHOT
  template_author: Ystia

description: The HAProxy component

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.3.0-SNAPSHOT
  - org.ystia.haproxy.pub:2.3.0-SNAPSHOT

node_types:
  org.ystia.haproxy.linux.bash.nodes.HAProxy:
    derived_from: org.ystia.nodes.SoftwareComponent
    description: HAProxy Server component for linux
    tags:
      icon: /images/logo.png
    capabilities:
      host:
        type: org.ystia.haproxy.pub.capabilities.Container.HAProxy
    interfaces:
      Standard:
        create:
          implementation: scripts/haproxy/create.sh
        configure:
          implementation: scripts/haproxy/configure.sh
        start:
          implementation: scripts/haproxy/start.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts

  org.ystia.haproxy.linux.bash.nodes.HAProxyHTTP:
    derived_from: org.ystia.nodes.SoftwareComponent
    description: HAProxy Server for HTTP connection on linux
    tags:
      icon: /images/logo.png
    properties:
      port:
        type: integer
        required: true
        description: Port number for mode HTTP
    requirements:
      - host:
          capability: org.ystia.haproxy.pub.capabilities.Container.HAProxy
          relationship: tosca.relationships.HostedOn
          occurrences: [0,unbounded]
    interfaces:
      Standard:
        configure:
          inputs:
            PORT: { get_property: [SELF, port]}
          implementation: scripts/haproxy_http/configure.sh
        start:
          implementation: scripts/haproxy/reload.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts

  org.ystia.haproxy.linux.bash.nodes.HAProxyTCP:
    derived_from: org.ystia.nodes.SoftwareComponent
    description: HAProxy Server for TCP connexion on linux
    tags:
      icon: /images/logo.png
    properties:
      port:
        type: integer
        required: true
        description: Port number for mode TCP
    capabilities:
      app_endpoint: tosca.capabilities.Endpoint
    requirements:
      - host:
          capability: org.ystia.haproxy.pub.capabilities.Container.HAProxy
          relationship: tosca.relationships.HostedOn
          occurrences: [0,unbounded]
    interfaces:
      Standard:
        configure:
          inputs:
            PORT: { get_property: [SELF, port]}
          implementation: scripts/haproxy_tcp/configure.sh
        start:
          implementation: scripts/haproxy/reload.sh
    artifacts:
      - scripts:
          type: tosca.artifacts.File
          file: scripts
